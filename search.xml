<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>VS Code 最全快捷键攻略(附中文释义)</title>
      <link href="/2019/09/11/vscode-keyboard-shortcuts/"/>
      <url>/2019/09/11/vscode-keyboard-shortcuts/</url>
      
        <content type="html"><![CDATA[<h1 id="VS-Code-最全快捷键攻略-附中文释义"><a href="#VS-Code-最全快捷键攻略-附中文释义" class="headerlink" title="VS Code 最全快捷键攻略(附中文释义)"></a>VS Code 最全快捷键攻略(附中文释义)</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>VSCode的快捷键继承了一些IDE风格，有VS的影子，也有Emacs的影子……简言之，内置快捷键玩熟了，对效率地提升不是一点两点。</p><p>以下是在Windows系统中VS code快捷键的最全说明，并附有对应的中文释义。</p><p>一点点地码出来，真心不易😅😅😅</p><h2 id="VSCode快捷键的五种组合方式"><a href="#VSCode快捷键的五种组合方式" class="headerlink" title="VSCode快捷键的五种组合方式"></a>VSCode快捷键的五种组合方式</h2><ul><li>Ctrl + Shift + ? : 这种常规组合按钮</li><li>Ctrl + V Ctrl + V : 同时依赖一个按键的组合</li><li>Shift + V c : 先组合后单键的输入</li><li>Ctrl + Click: 键盘 + 鼠标点击</li><li>Ctrl + DragMouse : 键盘 + 鼠标拖动</li></ul><h2 id="Keyboard-shortcuts-for-Windows"><a href="#Keyboard-shortcuts-for-Windows" class="headerlink" title="Keyboard shortcuts for Windows"></a>Keyboard shortcuts for Windows</h2><p><img src="https://raw.githubusercontent.com/HGzhao/CloudIMG/master/2019IMG/20190913222047.png" alt=""></p><h3 id="General-通用快捷键"><a href="#General-通用快捷键" class="headerlink" title="General (通用快捷键)"></a>General (通用快捷键)</h3><table><thead><tr><th align="left">快捷键</th><th align="left">作用</th><th align="left">中文释义</th></tr></thead><tbody><tr><td align="left"><code>Ctrl+Shift+P</code>, <code>F1</code></td><td align="left">Show Command Palette</td><td align="left">展示全局命令面板</td></tr><tr><td align="left"><code>Ctrl + P</code></td><td align="left">Quick Open, Go to File…</td><td align="left">快速打开最近打开的文件</td></tr><tr><td align="left"><code>Ctrl + Shift + N</code></td><td align="left">New window/instance</td><td align="left">打开新的编辑器窗口</td></tr><tr><td align="left"><code>Ctrl + Shift + W</code></td><td align="left">Close window/instance</td><td align="left">关闭编辑器</td></tr><tr><td align="left"><code>Ctrl +,</code></td><td align="left">User Settings</td><td align="left"></td></tr><tr><td align="left"><code>Ctrl+K Ctrl+S</code></td><td align="left">Keyboard Shortcuts</td><td align="left"></td></tr></tbody></table><h3 id="Basic-editing-基础编辑"><a href="#Basic-editing-基础编辑" class="headerlink" title="Basic editing (基础编辑)"></a>Basic editing (基础编辑)</h3><table><thead><tr><th align="left">快捷键</th><th align="left">作用</th><th align="left">中文释义</th></tr></thead><tbody><tr><td align="left"><code>Ctrl + X</code></td><td align="left">Cut line (empty selection)</td><td align="left">剪切</td></tr><tr><td align="left"><code>Ctrl + C</code></td><td align="left">Copy line (empty selection)</td><td align="left">复制</td></tr><tr><td align="left"><code>Alt + ↑ / ↓</code></td><td align="left">Move line up/down</td><td align="left">移动行上下</td></tr><tr><td align="left"><code>Shift + Alt + ↓ / ↑</code></td><td align="left">Copy line up/down</td><td align="left">在当前行上下复制当前行</td></tr><tr><td align="left"><code>Ctrl + Shift + K</code></td><td align="left">Delete line</td><td align="left">删除行</td></tr><tr><td align="left"><code>Ctrl + Enter</code></td><td align="left">Insert line below</td><td align="left">在当前行下插入新的一行</td></tr><tr><td align="left"><code>Ctrl + Shift + Enter</code></td><td align="left">Insert line above</td><td align="left">在当前行上插入新的一行</td></tr><tr><td align="left"><code>Ctrl + Shift + |</code></td><td align="left">Jump to matching bracket</td><td align="left">匹配花括号的闭合处，跳转</td></tr><tr><td align="left"><code>Ctrl + ] / [</code></td><td align="left">Indent/outdent line</td><td align="left">行缩进</td></tr><tr><td align="left"><code>Ctrl + Shift + Enter</code></td><td align="left">Insert line above</td><td align="left">在当前行上插入新的一行</td></tr><tr><td align="left"><code>Home / End</code></td><td align="left">Go to beginning/end of line</td><td align="left">光标跳转到 行头/行尾</td></tr><tr><td align="left"><code>Ctrl + Home / End</code></td><td align="left">Go to beginning/end of file</td><td align="left">跳转到 页头/页尾</td></tr><tr><td align="left"><code>Ctrl+ ↑ / ↓</code></td><td align="left">Scroll line up/down</td><td align="left">行视图上下偏移</td></tr><tr><td align="left"><code>Alt+ PgUp / PgDown</code></td><td align="left">Scroll page up/down</td><td align="left">屏视图上下偏移</td></tr><tr><td align="left"><code>Ctrl + Shift + ] / [</code></td><td align="left">Unfold/Fold (uncollapse) region</td><td align="left">折叠/展开 区域代码</td></tr><tr><td align="left"><code>Ctrl+K Ctrl+[</code></td><td align="left">Fold (collapse) all subregions</td><td align="left">折叠所有子区域代码</td></tr><tr><td align="left"><code>Ctrl+K Ctrl+]</code></td><td align="left">Unfold (uncollapse) all subregions</td><td align="left">展开所有折叠的子区域代码</td></tr><tr><td align="left"><code>Ctrl+K Ctrl+0</code></td><td align="left">Fold (collapse) all regions</td><td align="left">折叠所有区域代码</td></tr><tr><td align="left"><code>Ctrl+K Ctrl+J</code></td><td align="left">Unfold (uncollapse) all regions</td><td align="left">展开所有折叠区域代码</td></tr><tr><td align="left"><code>Ctrl+K Ctrl+C</code></td><td align="left">Add line comment</td><td align="left">添加行注释</td></tr><tr><td align="left"><code>Ctrl+K Ctrl+U</code></td><td align="left">Remove line comment</td><td align="left">删除行注释</td></tr><tr><td align="left"><code>Ctrl + /</code></td><td align="left">Toggle line comment</td><td align="left">添加关闭行注释</td></tr><tr><td align="left"><code>Shift + Alt + A</code></td><td align="left">Toggle block comment</td><td align="left">块区域注释</td></tr><tr><td align="left"><code>Alt + Z</code></td><td align="left">Toggle word wrap</td><td align="left">添加关闭词汇包含</td></tr></tbody></table><h3 id="Navigation-导航"><a href="#Navigation-导航" class="headerlink" title="Navigation (导航)"></a>Navigation (导航)</h3><table><thead><tr><th align="left">快捷键</th><th align="left">作用</th><th align="left">中文释义</th></tr></thead><tbody><tr><td align="left"><code>Ctrl + T</code></td><td align="left">Show all Symbols</td><td align="left">列出所有符号</td></tr><tr><td align="left"><code>Ctrl + G</code></td><td align="left">Go to Line…</td><td align="left">跳转行</td></tr><tr><td align="left"><code>Ctrl + P</code></td><td align="left">Go to File…</td><td align="left">跳转文件</td></tr><tr><td align="left"><code>Ctrl + Shift + O</code></td><td align="left">Go to Symbol…</td><td align="left">跳转到符号处</td></tr><tr><td align="left"><code>Ctrl + Shift + M</code></td><td align="left">Show Problems panel</td><td align="left">打开问题展示面板</td></tr><tr><td align="left"><code>F8</code></td><td align="left">Go to next error or warning</td><td align="left">跳转到下一个错误或者警告</td></tr><tr><td align="left"><code>Shift + F8</code></td><td align="left">Go to previous error or warning</td><td align="left">跳转到上一个错误或者警告</td></tr><tr><td align="left"><code>Ctrl + Shift + Tab</code></td><td align="left">Navigate editor group history</td><td align="left">切换到最近打开的文件</td></tr><tr><td align="left"><code>Alt+ ← / →</code></td><td align="left">Go back / forward</td><td align="left">向后、向前</td></tr><tr><td align="left"><code>Ctrl + M</code></td><td align="left">Toggle Tab moves focus</td><td align="left">进入用Tab来移动焦点</td></tr></tbody></table><h3 id="Search-and-replace-查询与替换"><a href="#Search-and-replace-查询与替换" class="headerlink" title="Search and replace (查询与替换)"></a>Search and replace (查询与替换)</h3><table><thead><tr><th align="left">快捷键</th><th align="left">作用</th><th align="left">中文释义</th></tr></thead><tbody><tr><td align="left"><code>Ctrl + F</code></td><td align="left">Find</td><td align="left">查询</td></tr><tr><td align="left"><code>Ctrl + H</code></td><td align="left">Replace</td><td align="left">替换</td></tr><tr><td align="left"><code>F3 / Shift + F3</code></td><td align="left">Find next/previous</td><td align="left">查询 下一个/上一个</td></tr><tr><td align="left"><code>Alt + Enter</code></td><td align="left">Select all occurences of Find match</td><td align="left">选中所有出现在查询中的</td></tr><tr><td align="left"><code>Ctrl + D</code></td><td align="left">Add selection to next Find match</td><td align="left">匹配当前选中的词汇或者行，再次选中-可操作</td></tr><tr><td align="left"><code>Ctrl + K Ctrl + D</code></td><td align="left">Move last selection to next Find match</td><td align="left">移动当前选择到下个匹配选择的位置(光标选定)</td></tr><tr><td align="left"><code>Alt + C / R / W</code></td><td align="left">Toggle case-sensitive / regex / whole word</td><td align="left"></td></tr></tbody></table><h3 id="Multi-cursor-and-selection-多行光标操作于选择"><a href="#Multi-cursor-and-selection-多行光标操作于选择" class="headerlink" title="Multi-cursor and selection (多行光标操作于选择)"></a>Multi-cursor and selection (多行光标操作于选择)</h3><table><thead><tr><th align="left">快捷键</th><th align="left">作用</th><th align="left">中文释义</th></tr></thead><tbody><tr><td align="left"><code>Alt + Click</code></td><td align="left">Insert cursor</td><td align="left">插入光标-支持多个</td></tr><tr><td align="left"><code>Ctrl+Alt+ ↑ / ↓</code></td><td align="left">Insert cursor above / below</td><td align="left">上下插入光标-支持多个</td></tr><tr><td align="left"><code>Ctrl + U</code></td><td align="left">Undo last cursor operation</td><td align="left">撤销最后一次光标操作</td></tr><tr><td align="left"><code>Shift + Alt + I</code></td><td align="left">Insert cursor at end of each line selected</td><td align="left">插入光标到选中范围内所有行结束符</td></tr><tr><td align="left"><code>Ctrl + I</code></td><td align="left">Select current line</td><td align="left">选中当前行</td></tr><tr><td align="left"><code>Ctrl + Shift + L</code></td><td align="left">Select all occurrences of current selection</td><td align="left">选择所有出现在当前选中的行-操作</td></tr><tr><td align="left"><code>Ctrl + F2</code></td><td align="left">Select all occurrences of current word</td><td align="left">选择所有出现在当前选中的词汇-操作</td></tr><tr><td align="left"><code>Shift + Alt + →</code></td><td align="left">Expand selection</td><td align="left">从光标处扩展选中全行</td></tr><tr><td align="left"><code>Shift + Alt + ←</code></td><td align="left">Shrink selection</td><td align="left">收缩选择区域</td></tr><tr><td align="left"><code>Shift + Alt + (drag mouse)</code></td><td align="left">Column (box) selection</td><td align="left">鼠标拖动区域，同时在多个行结束符插入光标</td></tr><tr><td align="left"><code>Ctrl + Shift + Alt + (arrow key)</code></td><td align="left">Column (box) selection</td><td align="left">也是插入多行光标的[方向键控制]</td></tr><tr><td align="left"><code>Ctrl + Shift + Alt + PgUp/PgDown</code></td><td align="left">Column (box) selection page up/down</td><td align="left">也是插入多行光标的[整屏生效]</td></tr></tbody></table><h3 id="Rich-languages-editing-丰富的语言操作"><a href="#Rich-languages-editing-丰富的语言操作" class="headerlink" title="Rich languages editing (丰富的语言操作)"></a>Rich languages editing (丰富的语言操作)</h3><table><thead><tr><th align="left">快捷键</th><th align="left">作用</th><th align="left">中文释义</th></tr></thead><tbody><tr><td align="left"><code>Ctrl + Space</code></td><td align="left">Trigger suggestion</td><td align="left">输入建议[智能提示]</td></tr><tr><td align="left"><code>Ctrl + Shift + Space</code></td><td align="left">Trigger parameter hints</td><td align="left">参数提示</td></tr><tr><td align="left"><code>Shift + Alt + F</code></td><td align="left">Format document</td><td align="left">格式化代码</td></tr><tr><td align="left"><code>Ctrl + K Ctrl + F</code></td><td align="left">Format selection</td><td align="left">格式化选中部分的代码</td></tr><tr><td align="left"><code>F12</code></td><td align="left">Go to Definition</td><td align="left">跳转到定义处</td></tr><tr><td align="left"><code>Alt + F12</code></td><td align="left">Peek Definition</td><td align="left">代码片段显示定义</td></tr><tr><td align="left"><code>Ctrl + K F12</code></td><td align="left">Open Definition to the side</td><td align="left">在其他窗口打开定义处</td></tr><tr><td align="left"><code>Ctrl + .</code></td><td align="left">Quick Fix</td><td align="left">快速修复部分可以修复的语法错误</td></tr><tr><td align="left"><code>Shift + F12</code></td><td align="left">Show References</td><td align="left">显示所有引用</td></tr><tr><td align="left"><code>F2</code></td><td align="left">Rename Symbol</td><td align="left">重命名符号</td></tr><tr><td align="left"><code>Ctrl+K Ctrl+X</code></td><td align="left">Trim trailing whitespace</td><td align="left">移除空白字符</td></tr><tr><td align="left"><code>Ctrl + K M</code></td><td align="left">Change file language</td><td align="left">更改页面文档格式</td></tr></tbody></table><h3 id="Editor-Window-management-编辑器-窗口管理"><a href="#Editor-Window-management-编辑器-窗口管理" class="headerlink" title="Editor/Window management (编辑器/窗口管理)"></a>Editor/Window management (编辑器/窗口管理)</h3><table><thead><tr><th align="left">快捷键</th><th align="left">作用</th><th align="left">中文释义</th></tr></thead><tbody><tr><td align="left"><code>Ctrl + F4</code>, <code>Ctrl + W</code></td><td align="left">Close editor</td><td align="left">关闭编辑器</td></tr><tr><td align="left"><code>Ctrl + k F</code></td><td align="left">Close folder</td><td align="left">关闭当前打开的文件夹</td></tr><tr><td align="left"><code>Ctrl + |</code></td><td align="left">Split editor</td><td align="left">切割编辑窗口</td></tr><tr><td align="left"><code>Ctrl+ 1 / 2 / 3</code></td><td align="left">ocus into 1 st , 2 nd or 3 rd editor group</td><td align="left">切换焦点在不同的切割窗口</td></tr><tr><td align="left"><code>Ctrl+K Ctrl+ ←/→</code></td><td align="left">Focus into previous/next editor group</td><td align="left">切换焦点在不同的切割窗口</td></tr><tr><td align="left"><code>Ctrl + Shift + PgUp/PgDown</code></td><td align="left">Move editor left/right</td><td align="left">切换标签页的位置</td></tr><tr><td align="left"><code>Ctrl+K ← / →</code></td><td align="left">Move active editor group</td><td align="left">切割窗口位置调换</td></tr></tbody></table><h3 id="File-management-文件管理"><a href="#File-management-文件管理" class="headerlink" title="File management (文件管理)"></a>File management (文件管理)</h3><table><thead><tr><th align="left">快捷键</th><th align="left">作用</th><th align="left">中文释义</th></tr></thead><tbody><tr><td align="left"><code>Ctrl + N</code></td><td align="left">New File</td><td align="left">新建文件</td></tr><tr><td align="left"><code>Ctrl + O</code></td><td align="left">Open File…</td><td align="left">打开文件</td></tr><tr><td align="left"><code>Ctrl + S</code></td><td align="left">Save</td><td align="left">保存文件</td></tr><tr><td align="left"><code>Ctrl + Shift + S</code></td><td align="left">Save As…</td><td align="left">另存为</td></tr><tr><td align="left"><code>Ctrl + K S</code></td><td align="left">Save All</td><td align="left">保存所有当前已经打开的文件</td></tr><tr><td align="left"><code>Ctrl + F4</code></td><td align="left">Close</td><td align="left">关闭当前编辑窗口</td></tr><tr><td align="left"><code>Ctrl + K Ctrl + W</code></td><td align="left">Close All</td><td align="left">关闭所有编辑窗口</td></tr><tr><td align="left"><code>Ctrl + Shift + T</code></td><td align="left">Reopen closed editor</td><td align="left">撤销最近关闭的一个文件编辑窗口</td></tr><tr><td align="left"><code>Ctrl + K Enter</code></td><td align="left">Keep preview mode editor open</td><td align="left">保持开启</td></tr><tr><td align="left"><code>Ctrl + Shift + Tab</code></td><td align="left">Open previous</td><td align="left">调出最近打开的文件列表，重复按会切换</td></tr><tr><td align="left"><code>Ctrl + Tab</code></td><td align="left">Open next</td><td align="left">与上面一致，顺序不一致</td></tr><tr><td align="left"><code>Ctrl + K P</code></td><td align="left">Copy path of active file</td><td align="left">复制当前打开文件的存放路径</td></tr><tr><td align="left"><code>Ctrl + K R</code></td><td align="left">Reveal active file in Explorer</td><td align="left">打开当前编辑文件存放位置【文件管理器】</td></tr><tr><td align="left"><code>Ctrl + K O</code></td><td align="left">Show active file in new window/instance</td><td align="left">在新的编辑器中打开当前编辑的文件</td></tr></tbody></table><h3 id="Display-显示"><a href="#Display-显示" class="headerlink" title="Display (显示)"></a>Display (显示)</h3><table><thead><tr><th align="left">快捷键</th><th align="left">作用</th><th align="left">中文释义</th></tr></thead><tbody><tr><td align="left"><code>F11</code></td><td align="left">Toggle full screen</td><td align="left">切换全屏模式</td></tr><tr><td align="left"><code>Shift + Alt + 1</code></td><td align="left">Toggle editor layout (horizontal/vertical)</td><td align="left">切换编辑布局【目前无效】</td></tr><tr><td align="left"><code>Ctrl + =/-</code></td><td align="left">Zoom in/out</td><td align="left">放大 / 缩小</td></tr><tr><td align="left"><code>Ctrl + B</code></td><td align="left">Toggle Sidebar visibility</td><td align="left">侧边栏显示隐藏</td></tr><tr><td align="left"><code>Ctrl + Shift + E</code></td><td align="left">Show Explorer / Toggle focus</td><td align="left">资源视图和编辑视图的焦点切换</td></tr><tr><td align="left"><code>Ctrl + Shift + F</code></td><td align="left">Show Search</td><td align="left">打开全局搜索</td></tr><tr><td align="left"><code>Ctrl + Shift + G</code></td><td align="left">Show Source Control</td><td align="left">打开Git可视管理</td></tr><tr><td align="left"><code>Ctrl + Shift + D</code></td><td align="left">Show Debug</td><td align="left">打开DeBug面板</td></tr><tr><td align="left"><code>Ctrl + Shift + X</code></td><td align="left">Show Extensions</td><td align="left">打开插件市场面板</td></tr><tr><td align="left"><code>Ctrl + Shift + H</code></td><td align="left">Replace in files</td><td align="left">在当前文件替换查询替换</td></tr><tr><td align="left"><code>Ctrl + Shift + J</code></td><td align="left">Toggle Search details</td><td align="left">开启详细查询</td></tr><tr><td align="left"><code>Ctrl + Shift + U</code></td><td align="left">Show Output panel</td><td align="left"></td></tr><tr><td align="left"><code>Ctrl + Shift + V</code></td><td align="left">Open Markdown preview</td><td align="left">预览Markdown文件【编译后】</td></tr><tr><td align="left"><code>Ctrl + K v</code></td><td align="left">Open Markdown preview to the side</td><td align="left">在边栏打开渲染后的视图【新建】</td></tr><tr><td align="left"><code>Ctrl+K Z</code></td><td align="left">Zen Mode (Esc Esc to exit)</td><td align="left">禅模式</td></tr></tbody></table><h3 id="Debug-调试"><a href="#Debug-调试" class="headerlink" title="Debug (调试)"></a>Debug (调试)</h3><table><thead><tr><th align="left">快捷键</th><th align="left">作用</th><th align="left">中文释义</th></tr></thead><tbody><tr><td align="left"><code>F9</code></td><td align="left">Toggle breakpoint</td><td align="left">添加解除断点</td></tr><tr><td align="left"><code>F5</code></td><td align="left">Start/Continue</td><td align="left">启动调试、继续</td></tr><tr><td align="left"><code>Shift + F5</code></td><td align="left">Stop</td><td align="left">结束调试</td></tr><tr><td align="left"><code>F11 / Shift + F11</code></td><td align="left">Step into/out</td><td align="left">单步进入 / 单步跳出</td></tr><tr><td align="left"><code>F10</code></td><td align="left">Step over</td><td align="left">单步跳过</td></tr><tr><td align="left"><code>Ctrl + K Ctrl + I</code></td><td align="left">Show hover</td><td align="left">显示悬浮</td></tr></tbody></table><h3 id="Integrated-terminal-终端集成"><a href="#Integrated-terminal-终端集成" class="headerlink" title="Integrated terminal (终端集成)"></a>Integrated terminal (终端集成)</h3><table><thead><tr><th align="left">快捷键</th><th align="left">作用</th><th align="left">中文释义</th></tr></thead><tbody><tr><td align="left"><code>Ctrl + \</code>`</td><td align="left">Show integrated terminal</td><td align="left">打开集成终端</td></tr><tr><td align="left"><code>Ctrl + Shift + \</code>`</td><td align="left">Create new terminal</td><td align="left">创建一个新的终端</td></tr><tr><td align="left"><code>Ctrl + C</code></td><td align="left">Copy selection</td><td align="left">复制所选</td></tr><tr><td align="left"><code>Ctrl + V</code></td><td align="left">Paste into active terminal</td><td align="left">复制到当前激活的终端</td></tr><tr><td align="left"><code>Ctrl+ ↑ / ↓</code></td><td align="left">Scroll up/down</td><td align="left">按行进行上下翻</td></tr><tr><td align="left"><code>Shift+PgUp / PgDn</code></td><td align="left">Scroll page up/down</td><td align="left">页面上下翻屏</td></tr><tr><td align="left"><code>Ctrl+Home / End</code></td><td align="left">Scroll to top/bottom</td><td align="left">滚动到页面头部或尾部</td></tr></tbody></table><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>以上这些，适用于Windows系统。至于Linux及MacOS系统中VS Code的键盘快捷键和附加功能，详见<a href="aka.ms/vscodekeybindings">aka.ms/vscodekeybindings</a>说明。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> VSCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python + Selenium 小技巧之清空输入框文字</title>
      <link href="/2019/09/04/python-selenium-qing-kong-shu-ru-kuang-wen-zi/"/>
      <url>/2019/09/04/python-selenium-qing-kong-shu-ru-kuang-wen-zi/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Selenium-小技巧之清空输入框文字"><a href="#Python-Selenium-小技巧之清空输入框文字" class="headerlink" title="Python + Selenium 小技巧之清空输入框文字"></a>Python + Selenium 小技巧之清空输入框文字</h1><p><img src="https://raw.githubusercontent.com/HGzhao/CloudIMG/master/2019IMG/20190908221123.gif" alt=""></p><h4 id="思路一：直接使用clear-方法删除文字"><a href="#思路一：直接使用clear-方法删除文字" class="headerlink" title="思路一：直接使用clear()方法删除文字"></a>思路一：直接使用<code>clear()</code>方法删除文字</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> time<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriverbrowser <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span> browser<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"https://www.baidu.com"</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>baidu_input <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">"kw"</span><span class="token punctuation">)</span>baidu_input<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">"Python Selenium"</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">:</span>    baidu_input<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Passed: Clear Success"</span><span class="token punctuation">)</span><span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Failed"</span><span class="token punctuation">,</span> format<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>browser<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="思路二：模拟键盘操作使用全选退格删除文字"><a href="#思路二：模拟键盘操作使用全选退格删除文字" class="headerlink" title="思路二：模拟键盘操作使用全选退格删除文字"></a>思路二：模拟键盘操作使用全选退格删除文字</h4><p>从用户操作出发，若想清除一个输入框中已存在的文字该怎么操作。我会使用<code>Ctrl + A</code>快捷键对输入框的内容进行全选，然后使用退格键，即可清空。 </p><p>在<code>selenium</code>中就为我们提供了一个<code>Keys</code>类，其中提供了很多常用的特殊按键。我们将其导入，看看使用它们是怎么来清除文字的。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> time<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>keys <span class="token keyword">import</span> Keysbrowser <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span> browser<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"https://www.baidu.com"</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>baidu_input <span class="token operator">=</span> browser<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">"kw"</span><span class="token punctuation">)</span>baidu_input<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">"Python Selenium"</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">:</span>    baidu_input<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>Keys<span class="token punctuation">.</span>CONTROL <span class="token operator">+</span> <span class="token string">'a'</span><span class="token punctuation">)</span>    baidu_input<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>Keys<span class="token punctuation">.</span>BACKSPACE<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Passed: Clear Success"</span><span class="token punctuation">)</span><span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Failed"</span><span class="token punctuation">,</span> format<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>browser<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 自动化测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Selenium </tag>
            
            <tag> 自动化测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python + Selenium 小技巧之切换浏览器窗口</title>
      <link href="/2019/08/29/python-selenium-qie-huan-liu-lan-qi-chuang-kou/"/>
      <url>/2019/08/29/python-selenium-qie-huan-liu-lan-qi-chuang-kou/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Selenium-小技巧之切换浏览器窗口"><a href="#Python-Selenium-小技巧之切换浏览器窗口" class="headerlink" title="Python + Selenium 小技巧之切换浏览器窗口"></a>Python + Selenium 小技巧之切换浏览器窗口</h1><p><img src="https://raw.githubusercontent.com/HGzhao/CloudIMG/master/2019IMG/20190908221124.gif" alt=""></p><p>浏览器大多页面中的链接，点击后就会打开一个新的窗口，这时就需要把窗口切换过去，才能继续执行相关的操作。</p><p>这里为了演示方便，我们预先通过执行js来新建出几个窗口。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> time<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriverbrowser <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span>js <span class="token operator">=</span> <span class="token string">'window.open("https://cn.bing.com/");'</span>browser<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span>js<span class="token punctuation">)</span></code></pre><p>因为每个窗口都有一个<strong>句柄(handle)</strong>，代表当前窗口，需要操作哪个页面的窗口，切换到窗口对应的句柄。</p><h4 id="思路一：通过句柄来切换窗口"><a href="#思路一：通过句柄来切换窗口" class="headerlink" title="思路一：通过句柄来切换窗口"></a>思路一：通过句柄来切换窗口</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> time<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriverbrowser <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 在当前浏览器中访问网易邮箱</span>browser<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://www.126.com'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 新开一个窗口，通过执行js来新开一个窗口</span>js <span class="token operator">=</span> <span class="token string">'window.open("https://cn.bing.com/");'</span>browser<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span>js<span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 输出当前窗口句柄（网易邮箱）</span>Netease_handle <span class="token operator">=</span> browser<span class="token punctuation">.</span>current_window_handle<span class="token comment" spellcheck="true"># 获取当前窗口句柄集合（列表类型）</span>handles <span class="token operator">=</span> browser<span class="token punctuation">.</span>window_handles<span class="token keyword">print</span><span class="token punctuation">(</span>handles<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 输出句柄集合</span><span class="token comment" spellcheck="true"># ['CDwindow-E9B85270B51D42AF7369D81B9AA70FFE',</span><span class="token comment" spellcheck="true"># 'CDwindow-90004FD79A0F59EE057846B34D0E7327']</span><span class="token comment" spellcheck="true"># 获取必应窗口</span>bing_handle <span class="token operator">=</span> None<span class="token keyword">for</span> handle <span class="token keyword">in</span> handles<span class="token punctuation">:</span>    <span class="token keyword">if</span> handle <span class="token operator">!=</span> Netease_handle<span class="token punctuation">:</span>        bing_handle <span class="token operator">=</span> handle<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'switch to '</span><span class="token punctuation">,</span> handle<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 输出当前窗口句柄（必应）</span>browser<span class="token punctuation">.</span>switch_to<span class="token punctuation">.</span>window<span class="token punctuation">(</span>Netease_handle<span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 关闭当前窗口（必应）</span><span class="token comment" spellcheck="true"># 切换回网易邮箱窗口</span>browser<span class="token punctuation">.</span>switch_to<span class="token punctuation">.</span>window<span class="token punctuation">(</span>bing_handle<span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>browser<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="思路二：根据浏览器页签title进行窗口切换"><a href="#思路二：根据浏览器页签title进行窗口切换" class="headerlink" title="思路二：根据浏览器页签title进行窗口切换"></a>思路二：根据浏览器页签<code>title</code>进行窗口切换</h4><p>其实这种方法也用到了句柄，与前面不同的是，这里使用了浏览器页签的<code>title</code>。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> time<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriverbrowser <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 在当前浏览器中访问网易邮箱</span>browser<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://www.126.com'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 新打开两个窗口</span>js <span class="token operator">=</span> <span class="token string">'window.open("https://www.qq.com/");'</span>browser<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span>js<span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>js <span class="token operator">=</span> <span class="token string">'window.open("https://cn.bing.com/");'</span>browser<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span>js<span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 拿到所有的窗口</span>allHandles <span class="token operator">=</span> browser<span class="token punctuation">.</span>window_handles<span class="token comment" spellcheck="true"># 根据窗口的title进行URL切换</span><span class="token keyword">for</span> handle <span class="token keyword">in</span> allHandles<span class="token punctuation">:</span>    <span class="token keyword">if</span> browser<span class="token punctuation">.</span>title<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">"腾讯"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>        browser<span class="token punctuation">.</span>switch_to_window<span class="token punctuation">(</span>handle<span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>browser<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>注：在<code>find()</code>方法中填写的Title，只需填入浏览器页签的部分Title内容即可。例如本例中为了切换至<code>https://www.qq.com/</code>页面，其全称实际是<code>腾讯首页</code>，但这里只输入<code>腾讯</code>即可。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 自动化测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Selenium </tag>
            
            <tag> 自动化测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/08/21/hello-world/"/>
      <url>/2019/08/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! </p><p>You can check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Git初始化配置</title>
      <link href="/2018/08/05/windows-git-chu-shi-hua-pei-zhi/"/>
      <url>/2018/08/05/windows-git-chu-shi-hua-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows-Git初始化配置"><a href="#Windows-Git初始化配置" class="headerlink" title="Windows Git初始化配置"></a>Windows Git初始化配置</h1><p>1、Git安装完毕后，从开始菜单中找到Git Bash，双击进入Git Shell界面</p><p>2、配置Name和Email</p><p>命令格式参考：<br><code>git config --global user.name "your name"</code><br><code>git config --global user.email "your email address"</code></p><p>3、生成Public/Private RSA Key</p><p>命令格式参考：<br><code>ssh-keygen -C "your email address" -t rsa</code><br><img src="https://raw.githubusercontent.com/HGzhao/CloudIMG/master/2019IMG/20190828192708.png" alt=""></p><p>这里有一些注意事项：</p><ul><li>设置Public RSA Key的保存位置，直接回车采用默认地址；</li><li>设置一个密码，并再次输入确认(<font color="#dd00dd"><strong>这里不建议设置，方便本地使用</strong></font>)</li><li>Public RSA Key的保存路径：c:\users\username.ssh\id_rsa.pub<br><img src="https://raw.githubusercontent.com/HGzhao/CloudIMG/master/2019IMG/20190828192736.png" alt=""></li></ul><p>4、将Public Key告知Github</p><ul><li>Home Page：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> 。</li><li>进入Account Settings页面，打开SSH Keys，点击“Add SSH Key”。</li><li>在本地打开c:\users\username.ssh\id_rsa.pub，把里面的内容全部Copy到Key对应的输入框内，点击“Add Key”。</li></ul><p>5、添加SSH信任<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>站点<br><img src="https://raw.githubusercontent.com/HGzhao/CloudIMG/master/2019IMG/20190828192744.png" alt=""></p><p>6、Clone Repositories<br><img src="https://raw.githubusercontent.com/HGzhao/CloudIMG/master/2019IMG/20190828192750.png" alt=""></p><p>需要注意的是：</p><ul><li>版本库地址格式：<code>git@github.com:your_resp_address</code>；</li><li>保存目录的最后一级不能Exist； </li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
